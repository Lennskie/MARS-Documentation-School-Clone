openapi: 3.0.3
info:
  title: 'M.A.R.S. - Mars-16'
  description: 'API spec for the Mars Active Response System - Mars-16'
  version: 0.0.1
servers:
  - url: https://project-ii.ti.howest.be/mars-16
    description: 'Public API'
  - url: http://localhost:8080/
    description: 'Local API'
paths:
  /api/subscriptions:
    get:
      operationId: getSubscriptions
      summary: Get subscriptions
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subscription"
  /api/dangerzones:
    summary: get dangerous zones, radius is in km (expect more objects than 1.)
    description: gets all the dangerous zones on Mars by coordinates, radius is in km (expect more objects than 1.)
    get:
      operationId: getDangerzones
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "#/components/schemas/dangerzones/properties/circle"

  /api/dangerzones/{latitude}/{longitude}/{radius}:
    summary: see if your coordinates are in a dangerous zone, radius is in km (this might not work, the one above will.)
    description: see if your coordinates are in a dangerous zone, radius is in km (this might not work, the one above will.)
    get:
      operationId: getDangerzonesByCoordinates
      summary: see if your coordinates are in a dangerous zone, radius is in km  (this might not work, the one above will.)
      parameters:
        - in: path
          name: latitude
          required: true
          schema:
            type: number
            format: float
        - in: path
          name: longitude
          required: true
          schema:
            type: number
            format: float
        - in: path
          name: radius
          required: true
          schema:
            type: number
            format: float
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - dangerous
                  - not-dangerous

components:
  schemas:
    Subscription:
      type: object
    dangerzones:
      properties:
        circle:
          description: return coordinates of dangerzones, radius is in km (expect more objects than 1.)
          example:
            { "location" : { "longitude" : 3.555, "latitude" : 7.888}, "radius" : 50 }
