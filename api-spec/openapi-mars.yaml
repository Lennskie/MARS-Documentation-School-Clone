openapi: 3.0.3
info:
  title: 'M.A.R.S. - Mars-16'
  description: 'API spec for the Mars Active Response System - Mars-16'
  version: 0.0.1
servers:
  - url: https://project-ii.ti.howest.be/mars-16
    description: 'Public API'
  - url: http://localhost:8080/
    description: 'Local API'

paths:
  /api/clients:
    get:
      operationId: getClients
      summary: Get clients
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/client'

  /api/clients/subscribed:
    get:
      operationId: getSubscribedClients
      summary: Get subscribed clients
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/client'

  /api/clients/{clientId}:
    get:
      operationId: getClient
      summary: Get client by identifier
      parameters:
        - name: clientId
          in: path
          description: Client identifier sent in url /clients/{clientId}
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/client'
  
  /api/clients/location/{clientId}/{latitude}/{longitude}:
    put:
      operationId: updateClientLocation
      summary: updateClientLocation
      parameters:
        - name: clientId
          in: path
          description: Client identifier sent in url /clients/{clientId}
          required: true
          schema:
            type: string
        - name: latitude
          in: path
          description: client latitude
          required: true
          schema:
            type: number
        - name: longitude
          in: path
          description: client longitude
          required: true
          schema:
            type: number
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'

  /api/vehicles:
    get:
      operationId: getVehicles
      summary: Get vehicles
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vehicles:
                    type: array
                    items:
                      $ref: '#/components/schemas/vehicle'

  /api/vehicles/{vehicleId}:
    get:
      operationId: getVehicle
      summary: Get vehicle by identifier
      parameters:
        - name: vehicleId
          in: path
          description: Vehicle identifier sent in url /vehicles/{vehicleId}
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/vehicle'

  /api/vehicles/location/{vehicleId}/{latitude}/{longitude}:
    put:
      operationId: updateVehicleLocation
      summary: updateVehicleLocation
      parameters:
        - name: vehicleId
          in: path
          description: Vehicle identifier sent in url /vehicles/{vehicleId}
          required: true
          schema:
            type: string
        - name: latitude
          in: path
          description: vehicle latitude
          required: true
          schema:
            type: number
        - name: longitude
          in: path
          description: vechile longitude
          required: true
          schema:
            type: number
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/vehicle"

  /api/vehicles/status/{vehicleId}/{status}:
    put:
      operationId: updateVehicleStatus
      summary: updateVehicleStatus
      parameters:
        - name: vehicleId
          in: path
          description: Vehicle identifier sent in url /vehicles/{vehicleId}
          required: true
          schema:
            type: string
        - name: status
          in: path
          description: vehicle status
          required: true
          schema:
            type: boolean
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/vehicle"

  /api/subscriptions:
    get:
      operationId: getSubscriptions
      summary: Get subscriptions
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/subscriptionTypes'

  /api/dangerzones:
    summary: get dangerous zones, radius is in km (expect more objects than 1.)
    description: gets all the dangerous zones on Mars by coordinates, radius is in km (expect more objects than 1.)
    get:
      operationId: getDangerzones
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    location:
                      example:
                      $ref: "#/components/schemas/location"
                    radius:
                      type: number
                      example: 2

  /api/domes:
    get:
      operationId: getDomes
      summary: Get domes
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  domes:
                    type: array
                    items:
                      $ref: '#/components/schemas/dome'

  /api/domes/{domeId}:
    get:
      operationId: getDome
      summary: Get dome by id
      parameters:
        - name: domeId
          in: path
          description: Dome identifier sent in url /domes/{domeId}
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/dome'

  /api/getDispatches:
    get:
      operationId: getDispatches
      summary: Get dispatches
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dispatches:
                    type: array
                    items:
                      $ref: '#/components/schemas/dispatch'
components:
  schemas:           
    location:
      type: object
      properties:
          latitude:
            type: number
            example: 2.34
          longitude:
            type: number
            example: 4.56
    subscription:
      type: object
      properties:
        name:
          type: string
          example: Silver
        description:
          type: string
          example: Rescue in Domes where a MARS station is present.
        price:
          type: integer
          example: 500
        start_date:
          type: string
          example: 2060-12-22
        end_date:
          type: string
          example: 2062-12-22
        reimbursed:
          type: boolean
    subscriptionTypes:
      type: object
      properties:
        name:
         type: string
         example: silver
        description:
          type: string
          example: Rescue in domes when a MARS station is present
        price:
          type: number
          example: 500
    vehicle:
      type: object
      properties:
        occupied:
          type: boolean
          example: true
        identifier: 
          type: string
          example: AV-001
        location:
          type: object
          $ref: "#/components/schemas/location"
    client:
      type: object
      properties:
        identifier:
          type: string
          example: MARS-ID-002
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Doe
        subscription:
          type: object
          $ref: '#/components/schemas/subscription'
        location:
          type: object
          $ref: '#/components/schemas/location'
        vitals:
          type: string
          example: good

    dome:
      type: object
      properties:
        identifier:
          type: string
          example: dome-001
        size: 
          type: number
          example: 2500
        location:
          type: object
          $ref: "#/components/schemas/location"

    dispatch:
      type: object
      properties:
        source:
          type: object
          example: 
          $ref: "#/components/schemas/client"
          enum:
            - $ref: "#/components/schemas/client"
            - $ref: "#/components/schemas/vehicle"
        target:
          type: object
          example:
          $ref: "#/components/schemas/vehicle"
          enum:
            - $ref: "#/components/schemas/client"
            - $ref: "#/components/schemas/vehicle"
